package com.wxy.work.entity;
// Generated 2017-3-27 10:02:09 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Hall generated by hbm2java
 */
@Entity
@Table(name = "hall", catalog = "work")
@JsonIgnoreProperties(value={"seats", "screens", "seatPlans", "hibernateLazyInitializer", "handler"})
public class Hall implements java.io.Serializable {

	private Integer hallId;
	private Cinema cinema;
	private int number;
	private Integer allCount;
	private Integer leftSeatCount;
	private Integer rows;
	private Integer cols;
	private String noneSeats;
	private Set<Seat> seats = new HashSet<Seat>(0);
	private Set<Screen> screens = new HashSet<Screen>(0);
	private Set<SeatPlan> seatPlans = new HashSet<SeatPlan>(0);

	public Hall() {
	}

	public Hall(Cinema cinema, int number) {
		this.cinema = cinema;
		this.number = number;
	}

	public Hall(Cinema cinema, int number, Integer allCount, Integer leftSeatCount, Set<Seat> seats,
			Set<Screen> screens, Set<SeatPlan> seatPlans) {
		this.cinema = cinema;
		this.number = number;
		this.allCount = allCount;
		this.leftSeatCount = leftSeatCount;
		this.seats = seats;
		this.screens = screens;
		this.seatPlans = seatPlans;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "hall_id", unique = true, nullable = false)
	public Integer getHallId() {
		return this.hallId;
	}

	public void setHallId(Integer hallId) {
		this.hallId = hallId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cinema_id", nullable = false)
	public Cinema getCinema() {
		return this.cinema;
	}

	public void setCinema(Cinema cinema) {
		this.cinema = cinema;
	}

	@Column(name = "number", nullable = false)
	public int getNumber() {
		return this.number;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	@Column(name = "all_count")
	public Integer getAllCount() {
		return this.allCount;
	}

	public void setAllCount(Integer allCount) {
		this.allCount = allCount;
	}

	@Column(name = "left_seat_count")
	public Integer getLeftSeatCount() {
		return this.leftSeatCount;
	}

	public void setLeftSeatCount(Integer leftSeatCount) {
		this.leftSeatCount = leftSeatCount;
	}
	
	@Column(name = "rows")
	public Integer getRows() {
		return rows;
	}

	public void setRows(Integer rows) {
		this.rows = rows;
	}

	@Column(name = "cols")
	public Integer getCols() {
		return cols;
	}

	public void setCols(Integer cols) {
		this.cols = cols;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hall")
	public Set<Seat> getSeats() {
		return this.seats;
	}

	public void setSeats(Set<Seat> seats) {
		this.seats = seats;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hall")
	public Set<Screen> getScreens() {
		return this.screens;
	}

	public void setScreens(Set<Screen> screens) {
		this.screens = screens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hall")
	public Set<SeatPlan> getSeatPlans() {
		return this.seatPlans;
	}

	public void setSeatPlans(Set<SeatPlan> seatPlans) {
		this.seatPlans = seatPlans;
	}
	
	@Column(name = "none_seats")
	public String getNoneSeats() {
		return noneSeats;
	}

	public void setNoneSeats(String noneSeats) {
		this.noneSeats = noneSeats;
	}

}
